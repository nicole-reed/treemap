{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useEffect","a","console","log","window","screen","width","axios","get","data","treeMap","root","d3","treemapLayout","height","size","sum","d","value","consoles","children","map","item","name","colors","colorScale","domain","range","append","attr","selectAll","descendants","enter","x0","y0","x1","y1","category","style","text","legend","legendColors","rectHeight","rectWidth","i","className","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAqHeA,MAhHf,WAEEC,oBAAS,sBAAC,4BAAAC,EAAA,6DACRC,QAAQC,IAAIC,OAAOC,OAAOC,MAAO,iBADzB,kBAIaC,IAAMC,IAAI,+FAJvB,OAIAC,EAJA,OAMNC,EAAQD,EAAKA,MANP,gDAQNP,QAAQC,IAAI,yBAAZ,MARM,yDAUP,IAEH,IAAMO,EAAU,SAACD,GAEf,IAAME,EAAOC,IAAaH,GAEpBI,EAAgBD,MAEhBN,EAAQF,OAAOC,OAAOC,MAAQ,KAA6B,GAAtBF,OAAOC,OAAOC,MAAa,IAChEQ,EAAiB,GAARR,EAEfO,EACGE,KAAK,CAACT,EAAOQ,IAEhBH,EAAKK,KAAI,SAACC,GAAD,OAAOA,EAAEC,SAElBL,EAAcF,GAGd,IAAMQ,EAAWR,EAAKS,SAASC,KAAI,SAACC,GAAD,OAAUA,EAAKb,KAAKc,QACvDrB,QAAQC,IAAI,WAAYgB,GAExB,IAAMK,EAAS,CAAC,SAAU,YAAa,UAAW,UAAW,UAAW,UACtE,UAAW,UAAW,UAAW,YAAa,UAAW,UACzD,UAAW,UAAW,UAAW,UAAW,UAAW,WACnDC,EAAab,MAChBc,OAAOP,GACPQ,MAAMH,GAEGZ,IAAU,UACnBgB,OAAO,OACPC,KAAK,QAASvB,GACduB,KAAK,SAAUf,GAEdgB,UAAU,QACXrB,KAAKE,EAAKoB,eACVC,QACAJ,OAAO,QACPC,KAAK,KAAK,SAACZ,GAAD,OAAOA,EAAEgB,MACnBJ,KAAK,KAAK,SAACZ,GAAD,OAAOA,EAAEiB,MACnBL,KAAK,SAAS,SAACZ,GAAD,OAAOA,EAAEkB,GAAKlB,EAAEgB,MAC9BJ,KAAK,UAAU,SAACZ,GAAD,OAAOA,EAAEmB,GAAKnB,EAAEiB,MAC/BL,KAAK,QAAS,QACdA,KAAK,aAAa,SAACZ,GAAD,OAAOA,EAAER,KAAKc,QAChCM,KAAK,iBAAiB,SAACZ,GAAD,OAAOA,EAAER,KAAK4B,YACpCR,KAAK,cAAc,SAACZ,GAAD,OAAOA,EAAER,KAAKS,SACjCoB,MAAM,QAAQ,SAAArB,GAAC,OAAIA,EAAER,KAAK4B,SAAWZ,EAAWR,EAAER,KAAK4B,UAAY,WACnEC,MAAM,SAAU,SAChBV,OAAO,SACPC,KAAK,KAAM,WACXA,KAAK,cAAc,SAACZ,GAAD,OAAOA,EAAER,KAAKS,SACjCqB,MAAK,SAACtB,GAAD,sBAAgBA,EAAER,KAAKc,KAAvB,sBAAyCN,EAAER,KAAK4B,SAAhD,oBAAoEpB,EAAER,KAAKS,UAEnF,IAAMsB,EAAS5B,IAAU,WACtBgB,OAAO,OACPC,KAAK,QAAiB,GAARvB,GACduB,KAAK,SAAUf,GAEZ2B,EAAe7B,MAClBc,OAAOP,GACPQ,MAAMH,GAEHkB,EAAa5B,EAAS,GACtB6B,EAAYrC,EAAQ,GAE1BkC,EAAOV,UAAU,QACdrB,KAAKU,GACLa,QACAJ,OAAO,QACPC,KAAK,IAAK,GACVA,KAAK,KAAK,SAACZ,EAAG2B,GAAJ,OAAUA,GAAKF,EAAa,MACtCb,KAAK,QAAS,eACdA,KAAK,QAASc,GACdd,KAAK,SAAUa,GACfJ,MAAM,QAAQ,SAACrB,GAAD,OAAOwB,EAAaxB,MAErCuB,EAAOV,UAAU,QACdrB,KAAKU,GACLa,QACAJ,OAAO,QACPC,KAAK,IAAKc,EAAY,GACtBd,KAAK,KAAK,SAACZ,EAAG2B,GAAJ,OAAUA,GAAKF,EAAa,GAAMA,EAAa,KACzDH,MAAK,SAACtB,GAAD,OAAOA,KACZqB,MAAM,qBAAsB,UAC5BA,MAAM,YART,UAQyBxB,EAAS,GARlC,QAWF,OACE,sBAAK+B,UAAU,MAAf,UACE,oBAAIC,GAAG,QAAP,0CACA,mBAAGA,GAAG,cAAN,uCACA,sBAAKA,GAAG,UAAR,UACE,qBAAKA,GAAG,UACR,qBAAKA,GAAG,kBClGDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0936a204.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport * as d3 from 'd3';\nimport './App.css';\n\nfunction App() {\n\n  useEffect(async () => {\n    console.log(window.screen.width, ' screen width')\n\n    try {\n      const data = await axios.get('https://cdn.freecodecamp.org/testable-projects-fcc/data/tree_map/video-game-sales-data.json')\n      // console.log(data)\n      treeMap(data.data)\n    } catch (error) {\n      console.log('error fetching data:\\n', error)\n    }\n  }, [])\n\n  const treeMap = (data) => {\n\n    const root = d3.hierarchy(data);\n\n    const treemapLayout = d3.treemap();\n\n    const width = window.screen.width < 1200 ? window.screen.width * .9 : 1000;\n    const height = width * .6;\n\n    treemapLayout\n      .size([width, height])\n\n    root.sum((d) => d.value);\n\n    treemapLayout(root)\n\n\n    const consoles = root.children.map((item) => item.data.name)\n    console.log('consoles', consoles)\n\n    const colors = ['3f3d3d', '#86cc86e7', '#9a9ad4', '#c78cc7', '#ffc0cb', '#e9fa8b',\n      '#85eeb9', '#fac61c', '#f06f6f', '#fc3085ef', '#75a0a0', '#a7d69e',\n      '#b64545', '#aaa7a7', '#01c483', '#d644d6', '#45a4f1', '#fafa4f'];\n    const colorScale = d3.scaleOrdinal()\n      .domain(consoles)\n      .range(colors);\n\n    const svg = d3.select('#chart')\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height);\n\n    svg.selectAll('rect')\n      .data(root.descendants())\n      .enter()\n      .append('rect')\n      .attr('x', (d) => d.x0)\n      .attr('y', (d) => d.y0)\n      .attr('width', (d) => d.x1 - d.x0)\n      .attr('height', (d) => d.y1 - d.y0)\n      .attr('class', 'tile')\n      .attr('data-name', (d) => d.data.name)\n      .attr('data-category', (d) => d.data.category)\n      .attr('data-value', (d) => d.data.value)\n      .style('fill', d => d.data.category ? colorScale(d.data.category) : 'white')\n      .style('stroke', 'white')\n      .append(\"title\")\n      .attr('id', 'tooltip')\n      .attr('data-value', (d) => d.data.value)\n      .text((d) => `Game: ${d.data.name}\\nConsole: ${d.data.category}\\nValue: ${d.data.value}`);\n\n    const legend = d3.select('#legend')\n      .append('svg')\n      .attr('width', width * .1)\n      .attr('height', height)\n\n    const legendColors = d3.scaleOrdinal()\n      .domain(consoles)\n      .range(colors);\n\n    const rectHeight = height / 36;\n    const rectWidth = width / 50;\n\n    legend.selectAll('rect')\n      .data(consoles)\n      .enter()\n      .append('rect')\n      .attr('x', 0)\n      .attr('y', (d, i) => i * (rectHeight + 5))\n      .attr('class', 'legend-item')\n      .attr('width', rectWidth)\n      .attr('height', rectHeight)\n      .style('fill', (d) => legendColors(d))\n\n    legend.selectAll('text')\n      .data(consoles)\n      .enter()\n      .append('text')\n      .attr('x', rectWidth + 3)\n      .attr('y', (d, i) => i * (rectHeight + 5) + (rectHeight / 2))\n      .text((d) => d)\n      .style(\"alignment-baseline\", \"middle\")\n      .style('font-size', `${height / 36}px`)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 id='title'>100 Most Popular Video Games</h1>\n      <p id='description'>Grouped By Gaming Console</p>\n      <div id='styling'>\n        <div id='chart'></div>\n        <div id='legend'></div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}